generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id           String    @id @default(uuid())
  userId       String
  name         String    @db.Text
  description  String?   @db.Text
  profileImage String    @db.Text
  cif          String    @db.Text
  phone        String    @db.Text
  country      String    @db.Text
  website      String    @db.Text
  contacts     Contact[]
  events       Event[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Contact {
  id        String    @id @default(uuid())
  companyId String?   @db.Text
  name      String    @db.Text
  role      String    @db.Text
  email     String    @db.Text
  phone     String    @db.Text
  company   Company?  @relation(fields: [companyId], references: [id], onDelete: Cascade)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([companyId])
}

model Event {
  id         String   @id @default(uuid())
  companyId  String
  title      String
  start      DateTime
  allDay     Boolean
  timeFormat String
  company    Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([companyId])
}

model Carga {
  id              Int          @id @default(autoincrement())
  idViaje         Int?        @map("id_viaje")
  idCliente       Int?        @map("id_cliente")
  pesoCarga       Decimal     @map("peso_carga") @db.Decimal(10,2)
  descripcionCarga String?    @map("descripcion_carga")
  destino         String?
  eventos         EventoCarga[]
  cliente         Cliente?     @relation(fields: [idCliente], references: [id])
  viaje           Viaje?       @relation(fields: [idViaje], references: [id])
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  @@map("carga")
}

model Chata {
  chasis          String           @id
  tipo_chata      String?          @map("tipo_chata")
  estado          String?
  capacidad       String?
  foto            String?
  documentos      DocumentoChata[]
  vehiculos       Vehiculo[]
  mantenimientos  Mantenimiento[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt

  @@map("chata")
}

model Chofer {
  id              Int       @id @default(autoincrement())
  nombre          String?
  apellido        String?
  fechaNacimiento DateTime? @map("fecha_nacimiento") @db.Date
  direccion       String?
  telefono        String?
  idEstado        Int?      @map("id_estado")
  documentos      DocumentoChofer[]
  viajes          Viaje[]
  estado          EstadoChofer? @relation(fields: [idEstado], references: [id])
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@map("chofer")
}

model Cliente {
  id             Int       @id @default(autoincrement())
  nombre         String?
  nitCi          String?   @map("nit_ci")
  direccion      String?
  ciudad         String?
  idEstado       Int?      @map("id_estado")
  fechaRegistro  DateTime? @map("fecha_registro") @db.Date
  cargas         Carga[]
  contactos      Contacto[]
  estado         EstadoCliente? @relation(fields: [idEstado], references: [id])
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  @@map("cliente")
}

model Contacto {
  id          Int      @id @default(autoincrement())
  idCliente   Int?     @map("id_cliente")
  nombre      String?
  cargo       String?
  telefono    String?
  email       String?
  cliente     Cliente? @relation(fields: [idCliente], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("contacto")
}

model DocumentoChata {
  id                Int       @id @default(autoincrement())
  chasisChata      String?   @map("chasis_chata")
  idTipoDocumento  Int?      @map("id_tipo_documento")
  numeroDocumento  String?   @map("numero_documento")
  fechaEmision     DateTime? @map("fecha_emision") @db.Date
  fechaVencimiento DateTime? @map("fecha_vencimiento") @db.Date
  estado           String?
  observaciones    String?
  chata            Chata?    @relation(fields: [chasisChata], references: [chasis], onDelete: Cascade)
  tipoDocumento    TipoDocumento? @relation(fields: [idTipoDocumento], references: [id])
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  @@map("documento_chata")
  @@index([chasisChata])
}

model DocumentoChofer {
  id                Int       @id @default(autoincrement())
  idChofer         Int?      @map("id_chofer")
  idTipoDocumento  Int?      @map("id_tipo_documento")
  numeroDocumento  String?   @map("numero_documento")
  fechaEmision     DateTime? @map("fecha_emision") @db.Date
  fechaVencimiento DateTime? @map("fecha_vencimiento") @db.Date
  estado           String?
  observaciones    String?
  chofer           Chofer?   @relation(fields: [idChofer], references: [id], onDelete: Cascade)
  tipoDocumento    TipoDocumento? @relation(fields: [idTipoDocumento], references: [id])
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  @@map("documento_chofer")
}

model DocumentoVehiculo {
  id                Int       @id @default(autoincrement())
  idVehiculo       Int?      @map("id_vehiculo")
  idTipoDocumento  Int?      @map("id_tipo_documento")
  numeroDocumento  String?   @map("numero_documento")
  fechaEmision     DateTime? @map("fecha_emision") @db.Date
  fechaVencimiento DateTime? @map("fecha_vencimiento") @db.Date
  estado           String?
  observaciones    String?
  vehiculo         Vehiculo? @relation(fields: [idVehiculo], references: [id], onDelete: Cascade)
  tipoDocumento    TipoDocumento? @relation(fields: [idTipoDocumento], references: [id])
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  @@map("documento_vehiculo")
}

model EstadoChofer {
  id          Int      @id @default(autoincrement())
  estado      String?
  descripcion String?
  choferes    Chofer[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("estado_chofer")
}

model EstadoCliente {
  id          Int      @id @default(autoincrement())
  estado      String?
  descripcion String?
  clientes    Cliente[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("estado_cliente")
}

model EstadoVehiculo {
  id          Int       @id @default(autoincrement())
  estado      String?
  descripcion String?
  vehiculos   Vehiculo[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("estado_vehiculo")
}

model EventoCarga {
  id          Int       @id @default(autoincrement())
  idCarga     Int?      @map("id_carga")
  fechaHora   DateTime? @map("fecha_hora")
  descripcion String?
  carga       Carga?    @relation(fields: [idCarga], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("evento_carga")
}

model Mantenimiento {
  id                Int       @id @default(autoincrement())
  idVehiculo        Int?     @map("id_vehiculo")
  chasisChata       String?  @map("chasis_chata")
  tipoActivo       String?   @map("tipo_activo")
  fechaMantenimiento DateTime? @map("fecha_mantenimiento") @db.Date
  costo            Decimal?  @db.Decimal(10,2)
  descripcion      String?
  vehiculo         Vehiculo? @relation(fields: [idVehiculo], references: [id], onDelete: Cascade, map: "mantenimiento_vehiculo_fkey")
  chata            Chata?    @relation(fields: [chasisChata], references: [chasis], onDelete: Cascade, map: "mantenimiento_chata_fkey")
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  @@map("mantenimiento")
  @@index([chasisChata])
}

model Rol {
  id          Int      @id @default(autoincrement())
  idUsuario   Int?     @map("id_usuario")
  rol         String?
  descripcion String?
  usuario     Usuario? @relation(fields: [idUsuario], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("rol")
}

model Ruta {
  id              Int      @id @default(autoincrement())
  ciudadOrigen    String?  @map("ciudad_origen")
  ciudadDestino   String?  @map("ciudad_destino")
  distancia       Decimal? @db.Decimal(10,2)
  tiempoEstimado  String?  @map("tiempo_estimado")
  condicionesRuta String?  @map("condiciones_ruta")
  trayectos       Trayecto[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("ruta")
}

model TipoDocumento {
  id                 Int       @id @default(autoincrement())
  nombre             String?
  descripcion        String?
  requiereRenovacion Boolean?  @default(true) @map("requiere_renovacion")
  diasAlerta         Int?      @default(30) @map("dias_alerta")
  documentosChata    DocumentoChata[]
  documentosChofer   DocumentoChofer[]
  documentosVehiculo DocumentoVehiculo[]
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt

  @@map("tipo_documento")
}

model Trayecto {
  id          Int      @id @default(autoincrement())
  idViaje     Int?     @map("id_viaje")
  idRuta      Int?     @map("id_ruta")
  orden       Int?
  viaje       Viaje?   @relation(fields: [idViaje], references: [id])
  ruta        Ruta?    @relation(fields: [idRuta], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("trayecto")
}

model Usuario {
  id        Int      @id @default(autoincrement())
  nombre    String?
  clave     String?
  pin       String?
  roles     Rol[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("usuario")
}

model Vehiculo {
  id             Int      @id @default(autoincrement())
  chasisChata    String?  @map("chasis_chata")
  placa          String?
  modelo         String?
  marca          String?
  anio           Int?
  tipoVehiculo   String?  @map("tipo_vehiculo")
  idEstado       Int?     @map("id_estado")
  documentos     DocumentoVehiculo[]
  mantenimientos Mantenimiento[]
  viajes         Viaje[]
  chata          Chata?   @relation(fields: [chasisChata], references: [chasis])
  estado         EstadoVehiculo? @relation(fields: [idEstado], references: [id])
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("vehiculo")
  @@index([chasisChata])
}

model Viaje {
  id            Int       @id @default(autoincrement())
  idCamion      Int?      @map("id_camion")
  idChofer      Int?      @map("id_chofer")
  fechaSalida   DateTime? @map("fecha_salida") @db.Date
  fechaLlegada  DateTime? @map("fecha_llegada") @db.Date
  estadoViaje   String?   @map("estado_viaje")
  observaciones String?
  cargas        Carga[]
  trayectos     Trayecto[]
  vehiculo      Vehiculo? @relation(fields: [idCamion], references: [id])
  chofer        Chofer?   @relation(fields: [idChofer], references: [id])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@map("viaje")
}